#!/usr/bin/env python3
import os
import sys
from pathlib import Path

import yaml
import click


# Global constants
DEFAULT_CONFIG_PATH=os.path.expanduser("~/.anssh.yml")

# Helper functions
def generate_hosts(config):
    # For every 

# Click grouping
@click.group()
@click.pass_context
@click.option('--configfile', envvar='ANSSH_CONFIGFILE', default=DEFAULT_CONFIG_PATH, help='Path to config file', type=click.File('r'))
def cli(ctx, configfile):
    config = yaml.safe_load(configfile.read())
    if config is None:
        config = {}
    ctx.obj['config'] = config

# Click commands
@cli.command()
@click.pass_context
def complete(ctx):
    script_path = os.path.realpath(__file__)

    click.echo("To add autocompletion, add this lines to ~/.bashrc:")
    click.echo("source <(_{}_COMPLETE=source {})".format(os.path.basename(__file__).upper(), script_path))

@cli.command()
@click.pass_context
def test_config(ctx):
    click.echo(ctx.obj['config'])

@cli.command()
@click.pass_context
def list_hosts(ctx):
    click.echo("Not implemented yet")



if __name__ == "__main__":
    cli(obj={})
